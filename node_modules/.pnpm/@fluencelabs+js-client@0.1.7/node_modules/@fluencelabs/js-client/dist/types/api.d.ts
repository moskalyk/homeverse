import type { FunctionCallDef, ServiceDef } from '@fluencelabs/interfaces';
import type { IFluenceClient } from '@fluencelabs/interfaces';
export declare const isFluencePeer: (fluencePeerCandidate: unknown) => fluencePeerCandidate is IFluenceClient;
/**
 * Convenience function to support Aqua `func` generation backend
 * The compiler only need to generate a call the function and provide the corresponding definitions and the air script
 *
 * @param rawFnArgs - raw arguments passed by user to the generated function
 * @param def - function definition generated by the Aqua compiler
 * @param script - air script with function execution logic generated by the Aqua compiler
 */
export declare const v5_callFunction: (rawFnArgs: Array<any>, def: FunctionCallDef, script: string) => Promise<unknown>;
/**
 * Convenience function to support Aqua `service` generation backend
 * The compiler only need to generate a call the function and provide the corresponding definitions and the air script
 * @param args - raw arguments passed by user to the generated function
 * @param def - service definition generated by the Aqua compiler
 */
export declare const v5_registerService: (args: any[], def: ServiceDef) => Promise<unknown>;
