import { SrvDef } from './_aqua/single-module-srv.js';
import { FluencePeer } from '../jsPeer/FluencePeer.js';
import { CallParams } from '@fluencelabs/interfaces';
import { SecurityGuard } from './securityGuard.js';
export declare const defaultGuard: (peer: FluencePeer) => SecurityGuard<any>;
export declare class Srv implements SrvDef {
    private peer;
    private services;
    constructor(peer: FluencePeer);
    securityGuard_create: SecurityGuard<'wasm_b64_content'>;
    create(wasm_b64_content: string, callParams: CallParams<'wasm_b64_content'>): Promise<{
        success: boolean;
        service_id: string;
        error: null;
    } | {
        success: boolean;
        service_id: null;
        error: any;
    }>;
    securityGuard_remove: SecurityGuard<'service_id'>;
    remove(service_id: string, callParams: CallParams<'service_id'>): Promise<{
        success: boolean;
        error: string;
        service_id: null;
    } | {
        success: boolean;
        error: string;
        service_id?: undefined;
    } | {
        success: boolean;
        error: null;
        service_id?: undefined;
    }>;
    list(): string[];
}
