(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.ItByteStream = factory()}(typeof self !== 'undefined' ? self : this, function () {
"use strict";var ItByteStream=(()=>{var O=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var z=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var j=(s,t)=>{for(var e in t)O(s,e,{get:t[e],enumerable:!0})},q=(s,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of z(t))!M.call(s,n)&&n!==e&&O(s,n,{get:()=>t[n],enumerable:!(r=_(t,n))||r.enumerable});return s};var C=s=>q(O({},"__esModule",{value:!0}),s);var G={};j(G,{AbortError:()=>B,CodeError:()=>v,byteStream:()=>X});function D(){let s={};return s.promise=new Promise((t,e)=>{s.resolve=t,s.reject=e}),s}var E=class{buffer;mask;top;btm;next;constructor(t){if(!(t>0)||t-1&t)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(t),this.mask=t-1,this.top=0,this.btm=0,this.next=null}push(t){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=t,this.top=this.top+1&this.mask,!0)}shift(){let t=this.buffer[this.btm];if(t!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,t}isEmpty(){return this.buffer[this.btm]===void 0}},d=class{size;hwm;head;tail;constructor(t={}){this.hwm=t.splitLimit??16,this.head=new E(this.hwm),this.tail=this.head,this.size=0}calculateSize(t){return t?.byteLength!=null?t.byteLength:1}push(t){if(t?.value!=null&&(this.size+=this.calculateSize(t.value)),!this.head.push(t)){let e=this.head;this.head=e.next=new E(2*this.head.buffer.length),this.head.push(t)}}shift(){let t=this.tail.shift();if(t===void 0&&this.tail.next!=null){let e=this.tail.next;this.tail.next=null,this.tail=e,t=this.tail.shift()}return t?.value!=null&&(this.size-=this.calculateSize(t.value)),t}isEmpty(){return this.head.isEmpty()}};var k=class extends Error{type;code;constructor(t,e){super(t??"The operation was aborted"),this.type="aborted",this.code=e??"ABORT_ERR"}};function N(s={}){return W(e=>{let r=e.shift();if(r==null)return{done:!0};if(r.error!=null)throw r.error;return{done:r.done===!0,value:r.value}},s)}function W(s,t){t=t??{};let e=t.onEnd,r=new d,n,i,u,a=D(),l=async()=>{try{return r.isEmpty()?u?{done:!0}:await new Promise((f,y)=>{i=x=>{i=null,r.push(x);try{f(s(r))}catch(g){y(g)}return n}}):s(r)}finally{r.isEmpty()&&queueMicrotask(()=>{a.resolve(),a=D()})}},b=f=>i!=null?i(f):(r.push(f),n),h=f=>(r=new d,i!=null?i({error:f}):(r.push({error:f}),n)),o=f=>{if(u)return n;if(t?.objectMode!==!0&&f?.byteLength==null)throw new Error("objectMode was not true but tried to push non-Uint8Array value");return b({done:!1,value:f})},c=f=>u?n:(u=!0,f!=null?h(f):b({done:!0})),A=()=>(r=new d,c(),{done:!0}),T=f=>(c(f),{done:!0});if(n={[Symbol.asyncIterator](){return this},next:l,return:A,throw:T,push:o,end:c,get readableLength(){return r.size},onEmpty:async f=>{let y=f?.signal;if(y?.throwIfAborted(),r.isEmpty())return;let x,g;y!=null&&(x=new Promise((H,F)=>{g=()=>{F(new k)},y.addEventListener("abort",g)}));try{await Promise.race([a.promise,x])}finally{g!=null&&y!=null&&y?.removeEventListener("abort",g)}}},e==null)return n;let p=n;return n={[Symbol.asyncIterator](){return this},next(){return p.next()},throw(f){return p.throw(f),e!=null&&(e(f),e=void 0),{done:!0}},return(){return p.return(),e!=null&&(e(),e=void 0),{done:!0}},push:o,end(f){return p.end(f),e!=null&&(e(f),e=void 0),n},get readableLength(){return p.readableLength}},n}function m(s){return globalThis.Buffer!=null?new Uint8Array(s.buffer,s.byteOffset,s.byteLength):s}function w(s=0){return globalThis.Buffer?.alloc!=null?m(globalThis.Buffer.alloc(s)):new Uint8Array(s)}function L(s=0){return globalThis.Buffer?.allocUnsafe!=null?m(globalThis.Buffer.allocUnsafe(s)):new Uint8Array(s)}function S(s,t){t==null&&(t=s.reduce((n,i)=>n+i.length,0));let e=L(t),r=0;for(let n of s)e.set(n,r),r+=n.length;return m(e)}function I(s,t){if(s===t)return!0;if(s.byteLength!==t.byteLength)return!1;for(let e=0;e<s.byteLength;e++)if(s[e]!==t[e])return!1;return!0}var R=Symbol.for("@achingbrain/uint8arraylist");function P(s,t){if(t==null||t<0)throw new RangeError("index is out of bounds");let e=0;for(let r of s){let n=e+r.byteLength;if(t<n)return{buf:r,index:t-e};e=n}throw new RangeError("index is out of bounds")}function V(s){return!!s?.[R]}var U=class s{constructor(...t){Object.defineProperty(this,R,{value:!0}),this.bufs=[],this.length=0,t.length>0&&this.appendAll(t)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...t){this.appendAll(t)}appendAll(t){let e=0;for(let r of t)if(r instanceof Uint8Array)e+=r.byteLength,this.bufs.push(r);else if(V(r))e+=r.byteLength,this.bufs.push(...r.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}prepend(...t){this.prependAll(t)}prependAll(t){let e=0;for(let r of t.reverse())if(r instanceof Uint8Array)e+=r.byteLength,this.bufs.unshift(r);else if(V(r))e+=r.byteLength,this.bufs.unshift(...r.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}get(t){let e=P(this.bufs,t);return e.buf[e.index]}set(t,e){let r=P(this.bufs,t);r.buf[r.index]=e}write(t,e=0){if(t instanceof Uint8Array)for(let r=0;r<t.length;r++)this.set(e+r,t[r]);else if(V(t))for(let r=0;r<t.length;r++)this.set(e+r,t.get(r));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(t){if(t=Math.trunc(t),!(Number.isNaN(t)||t<=0)){if(t===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(t>=this.bufs[0].byteLength)t-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(t),this.length-=t;break}}}slice(t,e){let{bufs:r,length:n}=this._subList(t,e);return S(r,n)}subarray(t,e){let{bufs:r,length:n}=this._subList(t,e);return r.length===1?r[0]:S(r,n)}sublist(t,e){let{bufs:r,length:n}=this._subList(t,e),i=new s;return i.length=n,i.bufs=r,i}_subList(t,e){if(t=t??0,e=e??this.length,t<0&&(t=this.length+t),e<0&&(e=this.length+e),t<0||e>this.length)throw new RangeError("index is out of bounds");if(t===e)return{bufs:[],length:0};if(t===0&&e===this.length)return{bufs:[...this.bufs],length:this.length};let r=[],n=0;for(let i=0;i<this.bufs.length;i++){let u=this.bufs[i],a=n,l=a+u.byteLength;if(n=l,t>=l)continue;let b=t>=a&&t<l,h=e>a&&e<=l;if(b&&h){if(t===a&&e===l){r.push(u);break}let o=t-a;r.push(u.subarray(o,o+(e-t)));break}if(b){if(t===0){r.push(u);continue}r.push(u.subarray(t-a));continue}if(h){if(e===l){r.push(u);break}r.push(u.subarray(0,e-a));break}r.push(u)}return{bufs:r,length:e-t}}indexOf(t,e=0){if(!V(t)&&!(t instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let r=t instanceof Uint8Array?t:t.subarray();if(e=Number(e??0),isNaN(e)&&(e=0),e<0&&(e=this.length+e),e<0&&(e=0),t.length===0)return e>this.length?this.length:e;let n=r.byteLength;if(n===0)throw new TypeError("search must be at least 1 byte long");let i=256,u=new Int32Array(i);for(let o=0;o<i;o++)u[o]=-1;for(let o=0;o<n;o++)u[r[o]]=o;let a=u,l=this.byteLength-r.byteLength,b=r.byteLength-1,h;for(let o=e;o<=l;o+=h){h=0;for(let c=b;c>=0;c--){let A=this.get(o+c);if(r[c]!==A){h=Math.max(1,c-a[A]);break}}if(h===0)return o}return-1}getInt8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getInt8(0)}setInt8(t,e){let r=L(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setInt8(0,e),this.write(r,t)}getInt16(t,e){let r=this.subarray(t,t+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt16(0,e)}setInt16(t,e,r){let n=w(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt16(0,e,r),this.write(n,t)}getInt32(t,e){let r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt32(0,e)}setInt32(t,e,r){let n=w(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt32(0,e,r),this.write(n,t)}getBigInt64(t,e){let r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigInt64(0,e)}setBigInt64(t,e,r){let n=w(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigInt64(0,e,r),this.write(n,t)}getUint8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getUint8(0)}setUint8(t,e){let r=L(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setUint8(0,e),this.write(r,t)}getUint16(t,e){let r=this.subarray(t,t+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint16(0,e)}setUint16(t,e,r){let n=w(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint16(0,e,r),this.write(n,t)}getUint32(t,e){let r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint32(0,e)}setUint32(t,e,r){let n=w(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint32(0,e,r),this.write(n,t)}getBigUint64(t,e){let r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigUint64(0,e)}setBigUint64(t,e,r){let n=w(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigUint64(0,e,r),this.write(n,t)}getFloat32(t,e){let r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat32(0,e)}setFloat32(t,e,r){let n=w(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat32(0,e,r),this.write(n,t)}getFloat64(t,e){let r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat64(0,e)}setFloat64(t,e,r){let n=w(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat64(0,e,r),this.write(n,t)}equals(t){if(t==null||!(t instanceof s)||t.bufs.length!==this.bufs.length)return!1;for(let e=0;e<this.bufs.length;e++)if(!I(this.bufs[e],t.bufs[e]))return!1;return!0}static fromUint8Arrays(t,e){let r=new s;return r.bufs=t,e==null&&(e=t.reduce((n,i)=>n+i.byteLength,0)),r.length=e,r}};var v=class extends Error{code;constructor(t,e){super(t),this.code=e}},B=class extends v{type;constructor(t){super(t,"ABORT_ERR"),this.type="aborted"}};function X(s){let t=N();s.sink(t).catch(i=>{t.end(i)}),s.sink=async i=>{for await(let u of i)t.push(u);t.end()};let e=s.source;s.source[Symbol.iterator]!=null?e=s.source[Symbol.iterator]():s.source[Symbol.asyncIterator]!=null&&(e=s.source[Symbol.asyncIterator]());let r=new U;return{read:async(i,u)=>{u?.signal?.throwIfAborted();let a,l=new Promise((b,h)=>{a=()=>{h(new B("Read aborted"))},u?.signal?.addEventListener("abort",a)});try{if(i==null){let{done:h,value:o}=await Promise.race([e.next(),l]);return h===!0?new U:o}for(;r.byteLength<i;){let{value:h,done:o}=await Promise.race([e.next(),l]);if(o===!0)throw new v("unexpected end of input","ERR_UNEXPECTED_EOF");r.append(h)}let b=r.sublist(0,i);return r.consume(i),b}finally{a!=null&&u?.signal?.removeEventListener("abort",a)}},write:async(i,u)=>{u?.signal?.throwIfAborted(),i instanceof Uint8Array?t.push(i):t.push(i.subarray()),await t.onEmpty(u)},unwrap:()=>{let i=s.source;return s.source=async function*(){yield*r,yield*i}(),s}}}return C(G);})();
return ItByteStream}));
